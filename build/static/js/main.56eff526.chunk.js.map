{"version":3,"sources":["components/EditItem.js","components/AddNewItem.js","components/ClearList.js","components/Search.js","components/ListItem.js","components/SortItems.js","components/ToDoList.js","components/App.js","index.js"],"names":["stores","EditItem","cancelEditItem","setItem","item","list","useState","errorMessage","setErrorMessage","newItem","setNewItem","store","selectedStore","setSelectedStore","onSubmitNewItem","event","preventDefault","trimmedNewItem","trim","length","filteredItems","filter","itemToFilter","id","toLowerCase","itemToUpdate","uuid","purchased","onSubmit","className","onChange","target","value","placeholder","autoFocus","type","onClick","stopPropagation","alt","src","AddNewItem","addNewItem","isFormVisible","setIsFormVisible","ClearList","setList","showConfirmation","setShowConfirmation","localStorage","clear","Search","setFilter","searchTerm","setSearchTerm","trimmed","ListItem","removeItem","togglePurchased","readOnly","setReadOnly","renderedItem","disabled","SortItems","sortStyle","setSortStyle","includes","ToDoList","array","updateItem","purchasedItem","renderedGroceries","sort","a","b","map","shoppingList","JSON","parse","getItem","console","log","sortMap","abc","abcReversed","storeReversed","App","filteredList","setFilteredList","useEffect","stringify","removedItem","updatedItem","updatedItemIndex","findIndex","prefixedList","slice","suffixedList","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.56eff526.chunk.js","sourcesContent":["import { Fragment, useState } from 'react'\nimport * as uuid from 'uuid'\nimport './EditItem.css'\n\nconst stores = [\"Wegmans\", \"Costco\"]\n\nconst EditItem = ({ cancelEditItem, setItem, item = {}, list }) => {\n  const [errorMessage, setErrorMessage] = useState('')\n  const [newItem, setNewItem] = useState(item.item || '')\n  const [selectedStore, setSelectedStore] = useState(item.store || stores[0])\n\n  const onInputChange = (event) => {\n    setErrorMessage('')\n    setNewItem(event.target.value)\n  }\n\n  const onSubmitNewItem = (event) => {\n    event.preventDefault()\n\n    let trimmedNewItem = newItem.trim()\n    if (!trimmedNewItem.length) {\n      setErrorMessage(\"Ummm...you want to buy nothing? 😉\")\n      return\n    }\n\n    const filteredItems = list.filter(itemToFilter => itemToFilter.id !== item.id)\n\n    for (let item of filteredItems) {\n      if (item[\"item\"].toLowerCase() === trimmedNewItem.toLowerCase()) {\n        setErrorMessage(`Looks like the item \"${trimmedNewItem}\" is already on your list 😊`)\n        return\n      }\n    }\n\n    const itemToUpdate = { id: item.id || uuid.v4(), item: trimmedNewItem, store: selectedStore, purchased: false }\n\n    setItem(itemToUpdate)\n  }\n\n  const toggleStore = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    setSelectedStore(selectedStore === 'Wegmans' ? 'Costco' : 'Wegmans')\n  }\n\n  return (\n    <Fragment>\n      <form onSubmit={onSubmitNewItem} className=\"container\">\n        <input\n          className={list.length >= 1 ? 'editItem' : ''}\n          onChange={onInputChange}\n          value={newItem}\n          placeholder={item.item ? item.item : 'Enter new product'}\n          autoFocus\n        />\n        <button type=\"button\" onClick={toggleStore}>\n          <img\n            alt={`logo for ${selectedStore}}`}\n            src={`./${selectedStore}.png`}\n          />\n        </button>\n        <button onClick={onSubmitNewItem}>💾</button>\n        <button className=\"remove\" onClick={cancelEditItem}>X</button>\n      </form>\n      {errorMessage && <p className=\"error\">{errorMessage}</p>}\n    </Fragment>\n  )\n}\n\nexport default EditItem\n","import { Fragment, useState } from 'react'\nimport EditItem from './EditItem'\nimport './AddNewItem.css'\n\nconst AddNewItem = ({ addNewItem, list }) => {\n  const [isFormVisible, setIsFormVisible] = useState(false)\n\n  const cancelEditItem = () => {\n    setIsFormVisible(false)\n  }\n\n  const setItem = (item) => {\n    addNewItem(item)\n    setIsFormVisible(false)\n  }\n\n  return (\n    <Fragment>\n      { isFormVisible ?\n        <EditItem\n          list={list}\n          setItem={setItem}\n          cancelEditItem={cancelEditItem}\n        />\n        : <button\n          className={list.length < 1 ? \"add\" : \"add add-margin\"}\n          onClick={() => setIsFormVisible(true)}>\n          Add item\n          </button>\n      }\n    </Fragment>\n  )\n}\n\nexport default AddNewItem\n","import { Fragment, useState } from 'react'\nimport './ClearList.css'\n\nconst ClearList = ({ setList }) => {\n  const [showConfirmation, setShowConfirmation] = useState(false)\n\n  const onClearList = () => {\n    localStorage.clear()\n    setList([])\n    setShowConfirmation(false)\n  }\n\n  return (\n    <div className=\"clearListContainer\">\n      { !showConfirmation ? <button className=\"clearList\" onClick={() => setShowConfirmation(true)}>Clear list</button> : null}\n      { showConfirmation ?\n        <Fragment>\n          <p>You worked so <em>hard</em> on this grocery list. Are you sure you want to delete it AND clear all local storage?</p>\n          <div className=\"clearListOptions\">\n            <button onClick={onClearList}>Yeah, man. Totally.</button>\n            <button onClick={() => setShowConfirmation(false)}>No, don't!</button>\n          </div>\n        </Fragment>\n        : null}\n    </div>\n  )\n}\n\nexport default ClearList\n","import { useState } from 'react'\nimport './Search.css'\n\nconst Search = ({ setFilter }) => {\n  const [searchTerm, setSearchTerm] = useState('')\n\n  const onInputChange = (event) => {\n    const trimmed = event.target.value.trim()\n\n    setSearchTerm(trimmed)\n    setFilter(trimmed)\n  }\n\n  return (\n    <div className=\"searchBarContainer\">\n      <span className=\"searchIcon\">🔎</span>\n      <input\n        className=\"searchBar\"\n        onChange={onInputChange}\n        value={searchTerm}\n        placeholder=\"Find an item in your list\"\n      />\n    </div>\n  )\n}\n\nexport default Search\n","import { Fragment, useState } from 'react'\nimport EditItem from './EditItem'\n\nconst ListItem = ({\n  item,\n  removeItem,\n  togglePurchased,\n  list,\n  setItem\n}) => {\n  const [readOnly, setReadOnly] = useState(true)\n\n  const cancelEditItem = () => {\n    setReadOnly(true)\n  }\n\n  const setListItem = (item) => {\n    setItem(item)\n    setReadOnly(true)\n  }\n\n  const renderedItem = (\n    <div className=\"container\">\n      <button type=\"button\" onClick={(event) => togglePurchased(event, item)}>{item.purchased ? \"✅\" : \"⬜\"}</button>\n      <input\n        className={item.purchased ? 'purchased' : ''}\n        value={item.item}\n        readOnly\n      />\n      <button type=\"button\" disabled>\n        <img\n          alt={item.store}\n          src={`./${item.store}.png`}\n        />\n      </button>\n      <button type=\"button\" onClick={() => setReadOnly(false)}>✏️</button>\n      <button type=\"button\" className=\"remove\" onClick={() => removeItem(item)}>X</button>\n    </div>\n  )\n\n  return (\n    <Fragment>\n      {\n        readOnly ? renderedItem\n          : <EditItem\n            item={item}\n            list={list}\n            setItem={setListItem}\n            cancelEditItem={cancelEditItem}\n          />\n      }\n    </Fragment>\n  )\n}\n\nexport default ListItem\n","import './SortItems.css'\n\nconst SortItems = ({ sortStyle, setSortStyle }) => (\n  <p className=\"sorting\">\n    Sort by:\n    <button\n      className={(sortStyle.includes('abc')) ? 'active' : null}\n      onClick={() => setSortStyle('abc' === sortStyle ? `${sortStyle}Reversed` : 'abc')}\n    >\n      Alphabet {sortStyle === 'abc' ? '[a-z]' : sortStyle === 'abcReversed' ? '[z-a]' : null}\n    </button>\n    <button\n      className={(sortStyle.includes('store')) ? 'active' : null}\n      onClick={() => setSortStyle('store' === sortStyle ? `${sortStyle}Reversed` : 'store')}\n    >\n      Store {sortStyle.length > 0 ?\n        <img\n          alt={sortStyle === 'store' ? './Costco.png' : sortStyle === 'storeReversed' ? './Wegmans.png' : ''}\n          src={sortStyle === 'store' ? './Costco.png' : sortStyle === 'storeReversed' ? './Wegmans.png' : null}\n        />\n        : null}\n    </button>\n  </p>\n)\n\nexport default SortItems\n","import { Fragment } from 'react'\nimport ListItem from './ListItem'\nimport SortItems from './SortItems'\nimport './ToDoList.css'\n\nconst ToDoList = ({ list, removeItem, setSortStyle, sortStyle, updateItem }) => {\n  const sortByPurchased = (array) => {\n    return array.sort((a, b) => (a.purchased === b.purchased) ? 0 : a.purchased ? 1 : -1)\n  }\n\n  const togglePurchased = (event, purchasedItem) => {\n    event.preventDefault()\n    updateItem({ ...purchasedItem, purchased: !purchasedItem.purchased })\n  }\n\n  const renderedGroceries = sortByPurchased(list).map((item) => {\n    return (\n      <ListItem\n        key={item.id}\n        item={item}\n        removeItem={removeItem}\n        togglePurchased={togglePurchased}\n        setItem={updateItem}\n        list={list}\n      />\n    )\n  })\n\n  return (\n    <Fragment>\n      {list.length > 1 ? <SortItems setSortStyle={setSortStyle} sortStyle={sortStyle} /> : null}\n      {renderedGroceries}\n    </Fragment>\n  )\n}\n\nexport default ToDoList\n","import { useEffect, useState } from 'react'\nimport AddNewItem from './AddNewItem'\nimport ClearList from './ClearList'\nimport Search from './Search'\nimport ToDoList from './ToDoList'\nimport './styles.css'\n\nconst shoppingList = JSON.parse(localStorage.getItem('dttGroceryList')) || []\n\nconsole.log(localStorage)\n\nconst sortMap = {\n  abc: (a, b) => a.item < b.item ? -1 : 1,\n  abcReversed: (a, b) => a.item > b.item ? -1 : 1,\n  store: (a, b) => a.store < b.store ? -1 : 1,\n  storeReversed: (a, b) => a.store > b.store ? -1 : 1\n}\n\nconst App = () => {\n  const [filter, setFilter] = useState('')\n  const [filteredList, setFilteredList] = useState(shoppingList)\n  const [list, setList] = useState(shoppingList)\n  const [sortStyle, setSortStyle] = useState('')\n\n\n\n  useEffect(() => {\n    localStorage.setItem('dttGroceryList', JSON.stringify(list))\n    if (filter) {\n      setFilteredList([...list.filter(({ item }) => (\n        item.toLowerCase().includes(filter.toLowerCase())\n      )).sort(sortMap[sortStyle])])\n    } else {\n      setFilteredList([...list.sort(sortMap[sortStyle])])\n    }\n  }, [list, filter, sortStyle])\n\n  const addNewItem = (item) => {\n    setList([...list, item])\n  }\n\n  const removeItem = (removedItem) => {\n    setList(list.filter(({ id }) => id !== removedItem.id))\n  }\n\n  const updateItem = (updatedItem) => {\n    const updatedItemIndex = list.findIndex(item => item.id === updatedItem.id)\n    const prefixedList = list.slice(0, updatedItemIndex)\n    const suffixedList = list.slice(updatedItemIndex + 1)\n\n    setList([...prefixedList, updatedItem, ...suffixedList])\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <h1>Grocery List</h1>\n      {list.length > 0 ? <Search setFilter={setFilter} /> : null}\n      <ToDoList\n        list={filteredList}\n        removeItem={removeItem}\n        setList={setList}\n        setSortStyle={setSortStyle}\n        sortStyle={sortStyle}\n        updateItem={updateItem}\n      />\n      <AddNewItem\n        addNewItem={addNewItem}\n        list={list}\n      />\n      {list.length > 0 ? <ClearList setList={setList} /> : null}\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.querySelector('#root'))\n"],"sourceRoot":""}